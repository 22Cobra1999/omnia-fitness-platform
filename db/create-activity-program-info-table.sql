CREATE TABLE IF NOT EXISTS activity_program_info (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  activity_id BIGINT REFERENCES public.activities_base(id) ON DELETE CASCADE,
  duration INTEGER, -- in minutes for a single workout, or sessions for a program
  calories INTEGER,
  program_duration INTEGER, -- in weeks or months
  rich_description TEXT, -- HTML or long text for detailed program description
  interactive_pauses BOOLEAN DEFAULT FALSE
);

ALTER TABLE activity_program_info ENABLE ROW LEVEL SECURITY;

-- Policies for activity_program_info
DROP POLICY IF EXISTS "Allow read access to all activity_program_info." ON activity_program_info;
CREATE POLICY "Allow read access to all activity_program_info." ON activity_program_info
  FOR SELECT USING (TRUE);

DROP POLICY IF EXISTS "Coaches can manage their activity program info." ON activity_program_info;
CREATE POLICY "Coaches can manage their activity program info." ON activity_program_info
  FOR ALL USING (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid())) WITH CHECK (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid()));

DROP POLICY IF EXISTS "Admins can manage all activity program info." ON activity_program_info;
CREATE POLICY "Admins can manage all activity program info." ON activity_program_info
  FOR ALL USING (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin')) WITH CHECK (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin'));
