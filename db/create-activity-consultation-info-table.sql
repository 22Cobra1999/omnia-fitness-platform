CREATE TABLE IF NOT EXISTS activity_consultation_info (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  activity_id BIGINT REFERENCES public.activities_base(id) ON DELETE CASCADE,
  includes_videocall BOOLEAN DEFAULT FALSE,
  includes_message BOOLEAN DEFAULT FALSE,
  videocall_duration INTEGER, -- in minutes
  available_days TEXT[], -- e.g., ['monday', 'tuesday']
  available_hours TEXT[], -- e.g., ['10:00', '11:00']
  expiration_date TIMESTAMP WITH TIME ZONE -- for consultation credits
);

ALTER TABLE activity_consultation_info ENABLE ROW LEVEL SECURITY;

-- Policies for activity_consultation_info
DROP POLICY IF EXISTS "Allow read access to all activity_consultation_info." ON activity_consultation_info;
CREATE POLICY "Allow read access to all activity_consultation_info." ON activity_consultation_info
  FOR SELECT USING (TRUE);

DROP POLICY IF EXISTS "Coaches can manage their activity consultation info." ON activity_consultation_info;
CREATE POLICY "Coaches can manage their activity consultation info." ON activity_consultation_info
  FOR ALL USING (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid())) WITH CHECK (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid()));

DROP POLICY IF EXISTS "Admins can manage all activity consultation info." ON activity_consultation_info;
CREATE POLICY "Admins can manage all activity consultation info." ON activity_consultation_info
  FOR ALL USING (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin')) WITH CHECK (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin'));
