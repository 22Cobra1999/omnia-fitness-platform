CREATE TABLE IF NOT EXISTS activity_tags (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  activity_id BIGINT REFERENCES public.activities_base(id) ON DELETE CASCADE,
  tag_type TEXT NOT NULL, -- e.g., 'category', 'goal', 'level'
  tag_value TEXT NOT NULL,
  UNIQUE (activity_id, tag_type, tag_value) -- Ensure no duplicate tags for an activity
);

ALTER TABLE activity_tags ENABLE ROW LEVEL SECURITY;

-- Policies for activity_tags
DROP POLICY IF EXISTS "Allow read access to all activity_tags." ON activity_tags;
CREATE POLICY "Allow read access to all activity_tags." ON activity_tags
  FOR SELECT USING (TRUE);

DROP POLICY IF EXISTS "Coaches can manage their activity tags." ON activity_tags;
CREATE POLICY "Coaches can manage their activity tags." ON activity_tags
  FOR ALL USING (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid())) WITH CHECK (EXISTS (SELECT 1 FROM public.activities_base WHERE id = activity_id AND coach_id = auth.uid()));

DROP POLICY IF EXISTS "Admins can manage all activity tags." ON activity_tags;
CREATE POLICY "Admins can manage all activity tags." ON activity_tags
  FOR ALL USING (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin')) WITH CHECK (auth.uid() IN (SELECT user_id FROM public.user_roles WHERE role = 'admin'));
